com.astuetz.viewpager.extensions.PagerSlidingTabStrip -> com.astuetz.viewpager.extensions.PagerSlidingTabStrip:
    int[] ATTRS -> b
    android.widget.LinearLayout$LayoutParams defaultTabLayoutParams -> c
    android.widget.LinearLayout$LayoutParams expandedTabLayoutParams -> d
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip$PageListener pageListener -> e
    android.support.v4.view.ViewPager$OnPageChangeListener delegatePageListener -> a
    android.widget.LinearLayout tabsContainer -> f
    android.support.v4.view.ViewPager pager -> g
    int tabCount -> h
    int currentPosition -> i
    float currentPositionOffset -> j
    android.graphics.Paint rectPaint -> k
    android.graphics.Paint dividerPaint -> l
    boolean checkedTabWidths -> m
    int indicatorColor -> n
    int underlineColor -> o
    int dividerColor -> p
    boolean shouldExpand -> q
    boolean textAllCaps -> r
    int scrollOffset -> s
    int indicatorHeight -> t
    int underlineHeight -> u
    int dividerPadding -> v
    int tabPadding -> w
    int dividerWidth -> x
    int tabTextSize -> y
    int tabTextColor -> z
    android.graphics.Typeface tabTypeface -> A
    int tabTypefaceStyle -> B
    int lastScrollX -> C
    int tabBackgroundResId -> D
    java.util.Locale locale -> E
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void notifyDataSetChanged() -> a
    void addTextTab(int,java.lang.String) -> a
    void addIconTab(int,int) -> a
    void updateTabStyles() -> b
    void onMeasure(int,int) -> onMeasure
    void scrollToChild(int,int) -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void setIndicatorColor(int) -> setIndicatorColor
    void setIndicatorColorResource(int) -> setIndicatorColorResource
    int getIndicatorColor() -> getIndicatorColor
    void setIndicatorHeight(int) -> setIndicatorHeight
    int getIndicatorHeight() -> getIndicatorHeight
    void setUnderlineColor(int) -> setUnderlineColor
    void setUnderlineColorResource(int) -> setUnderlineColorResource
    int getUnderlineColor() -> getUnderlineColor
    void setDividerColor(int) -> setDividerColor
    void setDividerColorResource(int) -> setDividerColorResource
    int getDividerColor() -> getDividerColor
    void setUnderlineHeight(int) -> setUnderlineHeight
    int getUnderlineHeight() -> getUnderlineHeight
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    void setScrollOffset(int) -> setScrollOffset
    int getScrollOffset() -> getScrollOffset
    void setShouldExpand(boolean) -> setShouldExpand
    boolean getShouldExpand() -> getShouldExpand
    void setAllCaps(boolean) -> setAllCaps
    void setTextSize(int) -> setTextSize
    int getTextSize() -> getTextSize
    void setTextColor(int) -> setTextColor
    void setTextColorResource(int) -> setTextColorResource
    int getTextColor() -> getTextColor
    void setTabBackground(int) -> setTabBackground
    int getTabBackground() -> getTabBackground
    void setTabPaddingLeftRight(int) -> setTabPaddingLeftRight
    int getTabPaddingLeftRight() -> getTabPaddingLeftRight
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void access$0(com.astuetz.viewpager.extensions.PagerSlidingTabStrip,int) -> a
    void access$3(com.astuetz.viewpager.extensions.PagerSlidingTabStrip,int,int) -> a
    android.support.v4.view.ViewPager access$4(com.astuetz.viewpager.extensions.PagerSlidingTabStrip) -> a
    int access$6(com.astuetz.viewpager.extensions.PagerSlidingTabStrip) -> b
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$1 -> com.astuetz.viewpager.extensions.a:
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$2 -> com.astuetz.viewpager.extensions.b:
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$3 -> com.astuetz.viewpager.extensions.c:
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$IconTabProvider -> com.astuetz.viewpager.extensions.d:
    int getPageIconResId(int) -> a
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$PageListener -> com.astuetz.viewpager.extensions.e:
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip this$0 -> a
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState -> com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState:
    int currentPosition -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState$1 -> com.astuetz.viewpager.extensions.f:
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState createFromParcel(android.os.Parcel) -> a
    com.astuetz.viewpager.extensions.PagerSlidingTabStrip$SavedState[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.astuetz.viewpager.extensions.R -> com.astuetz.viewpager.extensions.g:
com.astuetz.viewpager.extensions.R$drawable -> com.astuetz.viewpager.extensions.h:
    int background_tab -> background_tab
com.astuetz.viewpager.extensions.R$styleable -> com.astuetz.viewpager.extensions.i:
    int[] PagerSlidingTabStrip -> PagerSlidingTabStrip
    int PagerSlidingTabStrip_dividerColor -> PagerSlidingTabStrip_dividerColor
    int PagerSlidingTabStrip_dividerPadding -> PagerSlidingTabStrip_dividerPadding
    int PagerSlidingTabStrip_indicatorColor -> PagerSlidingTabStrip_indicatorColor
    int PagerSlidingTabStrip_indicatorHeight -> PagerSlidingTabStrip_indicatorHeight
    int PagerSlidingTabStrip_scrollOffset -> PagerSlidingTabStrip_scrollOffset
    int PagerSlidingTabStrip_shouldExpand -> PagerSlidingTabStrip_shouldExpand
    int PagerSlidingTabStrip_tabBackground -> PagerSlidingTabStrip_tabBackground
    int PagerSlidingTabStrip_tabPaddingLeftRight -> PagerSlidingTabStrip_tabPaddingLeftRight
    int PagerSlidingTabStrip_textAllCaps -> PagerSlidingTabStrip_textAllCaps
    int PagerSlidingTabStrip_underlineColor -> PagerSlidingTabStrip_underlineColor
    int PagerSlidingTabStrip_underlineHeight -> PagerSlidingTabStrip_underlineHeight
com.minook.zeppa.CloudEndpointUtils -> com.minook.zeppa.a:
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder updateBuilder(com.google.api.client.googleapis.services.AbstractGoogleClient$Builder) -> a
com.minook.zeppa.CloudEndpointUtils$1 -> com.minook.zeppa.b:
    boolean val$enableGZip -> a
com.minook.zeppa.PrefsManager -> com.minook.zeppa.c:
    android.content.SharedPreferences getSharedPreferences(android.content.Context) -> d
    java.lang.String getLoggedInEmail(android.content.Context) -> a
    boolean setLoggedInAccountEmail(android.content.Context,java.lang.String) -> a
    java.lang.Long getLoggedInUserId(android.content.Context) -> b
    boolean setLoggedInUserId(android.content.Context,java.lang.Long) -> a
    boolean getUserPreference(android.content.Context,java.lang.String) -> b
    boolean setUserPreference(android.content.Context,java.lang.String,boolean) -> a
    boolean containsUserPreference(android.content.Context,java.lang.String) -> c
    void setBaseNotificationPreferences(android.content.Context) -> c
com.minook.zeppa.Utils -> com.minook.zeppa.d:
    java.util.Comparator USER_COMPARATOR -> a
    java.util.Comparator NOTIFICAITON_COMPARATOR -> b
    java.lang.String getDisplayDatesString(long,long) -> a
    java.lang.String getDisplayDateString(long) -> a
    java.lang.String getDisplayTimeString(long) -> b
    java.lang.String getTimeAsString(long) -> c
    java.lang.String getDayString(long) -> d
    java.lang.String getDateString(long) -> e
    java.lang.String getPrivacy(int) -> a
    java.lang.String formatPhoneNumber(java.lang.String) -> a
    java.lang.String make11DigitNumber(java.lang.String) -> b
    android.graphics.Bitmap loadImageBitmapFromUrl(java.lang.String) -> c
com.minook.zeppa.Utils$1 -> com.minook.zeppa.e:
    int compare(com.minook.zeppa.mediator.AbstractZeppaUserMediator,com.minook.zeppa.mediator.AbstractZeppaUserMediator) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.minook.zeppa.Utils$2 -> com.minook.zeppa.f:
    int compare(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification,com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.minook.zeppa.ZeppaApplication -> com.minook.zeppa.ZeppaApplication:
    java.util.List memoryObservers -> a
    com.minook.zeppa.activity.AuthenticatedFragmentActivity currentActivity -> b
    com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo currentDeviceInfo -> c
    void onCreate() -> onCreate
    void onLowMemory() -> onLowMemory
    com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo getCurrentDeviceInfo() -> a
    void unregisterMemoryObservery(com.minook.zeppa.observer.MemoryObserver) -> a
    void setCurrentDeviceInfo(com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo) -> a
    com.minook.zeppa.activity.AuthenticatedFragmentActivity getCurrentActivity() -> b
    void initialize(com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential) -> a
    void onTrimMemory(int) -> onTrimMemory
    void onMemoryWarning() -> c
    void onMemoryLow() -> d
    void onMemoryCritical() -> e
com.minook.zeppa.activity.AbstractAccountBaseActivity -> com.minook.zeppa.activity.a:
    java.lang.String TAG -> g
    android.widget.EditText givenNameField -> a
    android.widget.EditText familyNameField -> b
    android.widget.ImageView userImage -> c
    java.lang.String imageUrl -> d
    java.lang.String userGmail -> e
    java.lang.String userPhoneNumber -> f
    void onClick(android.view.View) -> onClick
    void loadAndSetImageInAsync(java.lang.String) -> a
    java.lang.String trimSizingFromURL(java.lang.String) -> b
    java.lang.String access$0(com.minook.zeppa.activity.AbstractAccountBaseActivity,java.lang.String) -> a
com.minook.zeppa.activity.AbstractAccountBaseActivity$1 -> com.minook.zeppa.activity.b:
    com.minook.zeppa.activity.AbstractAccountBaseActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.minook.zeppa.activity.AbstractAccountBaseActivity$2 -> com.minook.zeppa.activity.c:
    com.minook.zeppa.activity.AbstractAccountBaseActivity this$0 -> a
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.activity.AbstractEventViewActivity -> com.minook.zeppa.activity.AbstractEventViewActivity:
    java.lang.String TAG -> u
    com.minook.zeppa.mediator.AbstractZeppaEventMediator eventMediator -> a
    com.minook.zeppa.mediator.AbstractZeppaUserMediator hostMediator -> b
    com.minook.zeppa.adapter.tagadapter.AbstractTagAdapter tagAdapter -> c
    com.minook.zeppa.activity.AbstractEventViewActivity$EventCommentAdapter commentAdapter -> d
    com.minook.zeppa.activity.AbstractEventViewActivity$AddInvitesAdapter mInvitesAdapter -> v
    android.widget.ImageView conflictIndicator -> e
    android.widget.TextView attending -> f
    android.widget.TextView sendInvites -> g
    android.widget.LinearLayout sendInvitesHolder -> h
    android.widget.EditText commentText -> i
    android.widget.TextView postComment -> j
    android.widget.LinearLayout commentHolder -> k
    uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout pullToRefreshLayout -> w
    boolean isUpdatingEventRelationships -> x
    android.view.View barView -> l
    java.util.Comparator COMMENT_COMPARATOR -> m
    void onBackPressed() -> a
    void onClick(android.view.View) -> onClick
    void onCommentsLoaded() -> b
    void onRelationshipsLoaded() -> c
    void onNotificationReceived(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> a
    void onRefreshStarted(android.view.View) -> a
    void startNavigation() -> d
    void setAttendingText() -> e
    void showSendInvitesDialog() -> k
    void showAttendingDialog() -> l
    void postComment() -> m
    void startFetchEventExtrasThread() -> f
    void drawComments() -> g
    void access$0(com.minook.zeppa.activity.AbstractEventViewActivity,boolean) -> a
    com.minook.zeppa.activity.AbstractEventViewActivity$AddInvitesAdapter access$1(com.minook.zeppa.activity.AbstractEventViewActivity) -> a
com.minook.zeppa.activity.AbstractEventViewActivity$1 -> com.minook.zeppa.activity.d:
    com.minook.zeppa.activity.AbstractEventViewActivity this$0 -> a
    int compare(com.minook.zeppa.eventcommentendpoint.model.EventComment,com.minook.zeppa.eventcommentendpoint.model.EventComment) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.minook.zeppa.activity.AbstractEventViewActivity$2 -> com.minook.zeppa.activity.e:
    com.minook.zeppa.activity.AbstractEventViewActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.minook.zeppa.activity.AbstractEventViewActivity$3 -> com.minook.zeppa.activity.f:
    com.minook.zeppa.activity.AbstractEventViewActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.minook.zeppa.activity.AbstractEventViewActivity$AddInvitesAdapter -> com.minook.zeppa.activity.g:
    java.util.List mediators -> b
    java.util.List inviteMediators -> c
    java.util.List relationships -> d
    com.minook.zeppa.activity.AbstractEventViewActivity this$0 -> a
    java.util.List getEventRelationshipsToUpdate() -> a
    java.util.List getEventRelationshipsToInsert() -> b
    boolean isInvitable(long,java.util.List) -> a
    int getCount() -> getCount
    com.minook.zeppa.mediator.DefaultUserInfoMediator getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
    java.lang.Object getItem(int) -> getItem
com.minook.zeppa.activity.AbstractEventViewActivity$EventCommentAdapter -> com.minook.zeppa.activity.h:
    java.util.List comments -> b
    com.minook.zeppa.activity.AbstractEventViewActivity this$0 -> a
    java.lang.Long getLatestCommentPostTime() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    int getCount() -> getCount
    com.minook.zeppa.eventcommentendpoint.model.EventComment getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.minook.zeppa.activity.AbstractEventViewActivity$PostCommentTask -> com.minook.zeppa.activity.i:
    com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential credential -> b
    com.minook.zeppa.eventcommentendpoint.model.EventComment comment -> c
    com.minook.zeppa.activity.AbstractEventViewActivity this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.activity.AuthenticatedFragmentActivity -> com.minook.zeppa.activity.AuthenticatedFragmentActivity:
    java.lang.String TAG -> a
    android.app.ProgressDialog connectionProgress -> n
    com.google.android.gms.common.api.GoogleApiClient apiClient -> o
    com.google.android.gms.common.ConnectionResult connectionResult -> p
    int REQUEST_ACCOUNT_PICKER -> q
    int REQUEST_RECOVER_AUTH -> r
    int REQUEST_CODE_RESOLVE_ERR -> s
    int PLAY_SERVICES_RESOLUTION_REQUEST -> t
    void onNotificationReceived(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> a
    boolean isConnected() -> h
    com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential getGoogleAccountCredential() -> i
    void logout() -> j
    void onClick(android.view.View) -> onClick
com.minook.zeppa.activity.DefaultEventViewActivity -> com.minook.zeppa.activity.DefaultEventViewActivity:
    java.lang.String TAG -> u
    void setAttendingText() -> e
    void onAttendanceChanged() -> k
    void onTagsLoaded() -> l
    void onErrorLoadingTags() -> m
    void onClick(android.view.View) -> onClick
    void onNotificationReceived(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> a
    void setInvitesHolderVisibility() -> n
com.minook.zeppa.activity.EditAccountActivity -> com.minook.zeppa.activity.EditAccountActivity:
    com.minook.zeppa.mediator.MyZeppaUserMediator myMediator -> g
    boolean isUpdating -> h
    void onClick(android.view.View) -> onClick
    void updateAccount() -> a
    com.minook.zeppa.mediator.MyZeppaUserMediator access$0(com.minook.zeppa.activity.EditAccountActivity) -> a
    void access$1(com.minook.zeppa.activity.EditAccountActivity,boolean) -> a
com.minook.zeppa.activity.EditAccountActivity$1 -> com.minook.zeppa.activity.j:
    android.app.ProgressDialog dialog -> b
    com.minook.zeppa.activity.EditAccountActivity this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.activity.LoginActivity -> com.minook.zeppa.activity.LoginActivity:
    java.lang.String TAG -> a
    boolean signinClicked -> b
    boolean executingLaunch -> c
    int resolveConnectionFail -> d
    boolean launchIntoNotifications -> e
    void onClick(android.view.View) -> onClick
    boolean checkPlayServices() -> a
    void loadAndLaunch() -> b
    java.lang.String access$0(com.minook.zeppa.activity.LoginActivity) -> a
    boolean access$1(com.minook.zeppa.activity.LoginActivity) -> b
    void access$2(com.minook.zeppa.activity.LoginActivity,boolean) -> a
com.minook.zeppa.activity.LoginActivity$1 -> com.minook.zeppa.activity.k:
    com.minook.zeppa.activity.LoginActivity this$0 -> a
    com.minook.zeppa.activity.LoginActivity$UserResult doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.minook.zeppa.activity.LoginActivity$UserResult) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.activity.LoginActivity$UserResult -> com.minook.zeppa.activity.l:
    com.minook.zeppa.activity.LoginActivity$UserResult FETCH_SUCCESS -> a
    com.minook.zeppa.activity.LoginActivity$UserResult CREATE_NEW_USER -> b
    com.minook.zeppa.activity.LoginActivity$UserResult NETWORK_FAIL -> c
    com.minook.zeppa.activity.LoginActivity$UserResult AUTHORIZATION_FAIL -> d
    com.minook.zeppa.activity.LoginActivity$UserResult NOT_FOUND -> e
    com.minook.zeppa.activity.LoginActivity$UserResult UNKNOWN -> f
    com.minook.zeppa.activity.LoginActivity$UserResult[] ENUM$VALUES -> g
    com.minook.zeppa.activity.LoginActivity$UserResult[] values() -> values
    com.minook.zeppa.activity.LoginActivity$UserResult valueOf(java.lang.String) -> valueOf
com.minook.zeppa.activity.MainActivity -> com.minook.zeppa.activity.MainActivity:
    java.lang.String TAG -> a
com.minook.zeppa.activity.MinglerActivity -> com.minook.zeppa.activity.MinglerActivity:
    android.widget.TextView mutualMinglers -> a
    uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout pullToRefreshLayout -> b
    com.minook.zeppa.adapter.tagadapter.MinglerTagAdapter tagAdapter -> c
    com.minook.zeppa.adapter.eventlistadapter.MinglerEventsAdapter friendEventsAdapter -> d
    com.minook.zeppa.mediator.DefaultUserInfoMediator userMediator -> e
    boolean isUpdating -> f
    boolean isUpdatingMinglerRelationships -> g
    boolean isUpdatingMinglerEvents -> h
    boolean isUpdatingMinglerTags -> i
    void onClick(android.view.View) -> onClick
    void onMinglerRelationshipsLoaded() -> a
    void onErrorLoadingMinglerRelationships() -> b
    void onTagsLoaded() -> l
    void onRefreshStarted(android.view.View) -> a
    void onErrorLoadingTags() -> m
    void onZeppaEventsLoaded() -> c
    void onEntityTypeUpdateFinished() -> d
    void fetchUpdatedInfo() -> e
    void showMutualMinglers() -> f
com.minook.zeppa.activity.MinglerActivity$1 -> com.minook.zeppa.activity.m:
    com.minook.zeppa.activity.MinglerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.minook.zeppa.activity.MyEventViewActivity -> com.minook.zeppa.activity.MyEventViewActivity:
    java.lang.String TAG -> u
    void setAttendingText() -> e
    void onNotificationReceived(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> a
com.minook.zeppa.activity.NewAccountActivity -> com.minook.zeppa.activity.NewAccountActivity:
    java.lang.String TAG -> g
    boolean setInfoOnConnect -> h
    void onClick(android.view.View) -> onClick
    void createUserAndLaunchIntoMain() -> a
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUser createUserInstance() -> b
com.minook.zeppa.activity.NewAccountActivity$1 -> com.minook.zeppa.activity.n:
    android.app.ProgressDialog progress -> b
    com.minook.zeppa.activity.NewAccountActivity this$0 -> a
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUser doInBackground(java.lang.Object[]) -> a
    void onPostExecute(com.minook.zeppa.zeppauserendpoint.model.ZeppaUser) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.activity.NewEventActivity -> com.minook.zeppa.activity.NewEventActivity:
    java.lang.String TAG -> a
    android.widget.EditText titleField -> b
    android.widget.EditText descriptionField -> c
    android.widget.EditText shortLocationField -> d
    android.widget.Spinner eventPrivacyField -> e
    android.widget.CheckBox guestsCanInviteField -> f
    android.widget.TextView startDateField -> g
    android.widget.TextView startTimeField -> h
    android.widget.TextView endDateField -> i
    android.widget.TextView endTimeField -> j
    android.widget.EditText newTagTextField -> k
    android.widget.LinearLayout invitesHolder -> l
    java.util.Calendar startCalendar -> m
    java.util.Calendar endCalendar -> u
    java.lang.String longLocation -> v
    com.minook.zeppa.adapter.tagadapter.CreateEventTagAdapter tagAdapter -> w
    com.minook.zeppa.adapter.InviteListAdapter invitesAdapter -> x
    boolean is12HourFormat -> y
    boolean isStartCalendar -> z
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> a
    void startEventInAsync() -> b
    void showInviteList() -> c
    void showInviteViews() -> d
    java.lang.String dateToString(java.util.Calendar) -> a
    java.lang.String timeToString(java.util.Calendar) -> b
    int getDateInt(java.util.Calendar) -> c
    boolean isValidEvent(com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent) -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
    void access$0(com.minook.zeppa.activity.NewEventActivity,java.lang.String) -> a
    void access$1(com.minook.zeppa.activity.NewEventActivity) -> a
com.minook.zeppa.activity.NewEventActivity$1 -> com.minook.zeppa.activity.o:
    com.minook.zeppa.activity.NewEventActivity this$0 -> a
    android.widget.EditText val$addressField -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.minook.zeppa.activity.NewEventActivity$2 -> com.minook.zeppa.activity.p:
    com.minook.zeppa.activity.NewEventActivity this$0 -> a
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent doInBackground(java.lang.Object[]) -> a
    void onPostExecute(com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.activity.NewEventActivity$3 -> com.minook.zeppa.activity.q:
    com.minook.zeppa.activity.NewEventActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.minook.zeppa.activity.NewEventActivity$4 -> com.minook.zeppa.activity.r:
    com.minook.zeppa.activity.NewEventActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.minook.zeppa.activity.NewEventActivity$DatePickerFragment -> com.minook.zeppa.activity.s:
com.minook.zeppa.activity.NewEventActivity$TimePickerFragment -> com.minook.zeppa.activity.t:
com.minook.zeppa.activity.StartMinglingActivity -> com.minook.zeppa.activity.StartMinglingActivity:
    java.lang.String TAG -> a
    com.minook.zeppa.adapter.MinglerFinderAdapter adapter -> b
    uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout pullToRefreshLayout -> c
    boolean isFetchingPossible -> d
    void findMinglers() -> b
    void onNotificationReceived(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> a
    void onMinglersLoaded() -> a
    void onRefreshStarted(android.view.View) -> a
    com.minook.zeppa.adapter.MinglerFinderAdapter access$0(com.minook.zeppa.activity.StartMinglingActivity) -> a
com.minook.zeppa.activity.StartMinglingActivity$2 -> com.minook.zeppa.activity.u:
    com.minook.zeppa.activity.StartMinglingActivity this$0 -> a
    void run() -> run
com.minook.zeppa.adapter.InviteListAdapter -> com.minook.zeppa.a.a:
    java.util.List friendInfoManagers -> a
    java.util.List invitedUserIds -> b
    com.minook.zeppa.activity.AuthenticatedFragmentActivity activity -> c
    int getCount() -> getCount
    com.minook.zeppa.mediator.DefaultUserInfoMediator getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List getInvitedUserIds() -> a
    void addToInvited(android.view.View,java.lang.Long) -> a
    void removeFromInvited(android.view.View,java.lang.Long) -> b
    void onClick(android.view.View) -> onClick
    java.lang.Object getItem(int) -> getItem
com.minook.zeppa.adapter.MinglerFinderAdapter -> com.minook.zeppa.a.b:
    com.minook.zeppa.activity.AuthenticatedFragmentActivity context -> a
    java.util.List possibleConnectionMediators -> b
    java.util.List pendingRequestMediators -> c
    void notifyDataSetChanged() -> notifyDataSetChanged
    int getCount() -> getCount
    com.minook.zeppa.mediator.DefaultUserInfoMediator getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setMediators() -> a
    void onClick(android.view.View) -> onClick
    java.lang.Object getItem(int) -> getItem
com.minook.zeppa.adapter.MinglerListAdapter -> com.minook.zeppa.a.c:
    com.minook.zeppa.activity.AuthenticatedFragmentActivity activity -> a
    java.util.List infoManagers -> b
    int getCount() -> getCount
    com.minook.zeppa.mediator.DefaultUserInfoMediator getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onMinglersLoaded() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    java.lang.Object getItem(int) -> getItem
com.minook.zeppa.adapter.eventlistadapter.AbstractEventLayoutAdapter -> com.minook.zeppa.a.a.a:
    android.widget.LinearLayout eventHolder -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void drawEvents() -> a
com.minook.zeppa.adapter.eventlistadapter.AbstractEventListAdapter -> com.minook.zeppa.a.a.b:
    java.lang.String TAG -> a
    com.minook.zeppa.activity.AuthenticatedFragmentActivity activity -> b
    java.util.List eventMediators -> c
    int getCount() -> getCount
    com.minook.zeppa.mediator.AbstractZeppaEventMediator getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void notifyDataSetChanged() -> notifyDataSetChanged
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void setEventMediators() -> b
    void onClick(android.view.View) -> onClick
    java.lang.Object getItem(int) -> getItem
com.minook.zeppa.adapter.eventlistadapter.MinglerEventsAdapter -> com.minook.zeppa.a.a.c:
    com.minook.zeppa.mediator.DefaultUserInfoMediator friendMediator -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setEventMediators() -> b
com.minook.zeppa.adapter.tagadapter.AbstractTagAdapter -> com.minook.zeppa.a.b.a:
    com.minook.zeppa.activity.AuthenticatedFragmentActivity activity -> a
    android.widget.LinearLayout tagHolder -> b
    java.util.List tagMediators -> c
    void notifyDataSetChanged() -> notifyDataSetChanged
    java.util.List getCurrentTagMediators() -> a
    com.minook.zeppa.mediator.AbstractEventTagMediator getItem(int) -> a
    int getCount() -> getCount
    void drawTags() -> b
    java.lang.Object getItem(int) -> getItem
com.minook.zeppa.adapter.tagadapter.CreateEventTagAdapter -> com.minook.zeppa.a.b.b:
    java.util.Queue tagIdsQue -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void addTagToQue(android.view.View,java.lang.Long) -> a
    void removeTagFromQue(android.view.View,java.lang.Long) -> b
    android.widget.CheckedTextView locateViewByTag(java.lang.Long) -> a
    java.util.List getSelectedTagIds() -> c
    com.minook.zeppa.mediator.AbstractEventTagMediator getMatchingMediator(java.lang.String) -> a
    void onTagCreated(com.minook.zeppa.mediator.MyEventTagMediator) -> a
    void onClick(android.view.View) -> onClick
com.minook.zeppa.adapter.tagadapter.MinglerTagAdapter -> com.minook.zeppa.a.b.c:
    java.lang.Long userId -> d
    boolean doesMingleWithHost -> e
    java.util.List tagIds -> f
    java.util.List getCurrentTagMediators() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    void notifyDataSetChanged() -> notifyDataSetChanged
    void updateTagMediatorList() -> c
    void onClick(android.view.View) -> onClick
com.minook.zeppa.adapter.tagadapter.MyTagAdapter -> com.minook.zeppa.a.b.d:
    java.util.List tagIds -> d
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.minook.zeppa.mediator.MyEventTagMediator getItem(int) -> b
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    java.util.List getCurrentTagMediators() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    void setTags() -> c
    boolean createTagInAsync(android.widget.EditText) -> a
    com.minook.zeppa.mediator.AbstractEventTagMediator getMatchingMediator(java.lang.String) -> a
    void onTagCreated(com.minook.zeppa.mediator.MyEventTagMediator) -> a
    java.lang.String trimTag(java.lang.String) -> b
    java.lang.Object getItem(int) -> getItem
    com.minook.zeppa.mediator.AbstractEventTagMediator getItem(int) -> a
com.minook.zeppa.adapter.tagadapter.MyTagAdapter$1 -> com.minook.zeppa.a.b.e:
    android.widget.EditText textView -> b
    com.minook.zeppa.adapter.tagadapter.MyTagAdapter this$0 -> a
    com.minook.zeppa.mediator.MyEventTagMediator doInBackground(java.lang.Object[]) -> a
    void onPostExecute(com.minook.zeppa.mediator.MyEventTagMediator) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint -> com.minook.zeppa.b.a:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> a
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint$InsertDeviceInfo insertDeviceInfo(com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo) -> a
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint$ListDeviceInfo listDeviceInfo() -> a
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint$RemoveDeviceInfo removeDeviceInfo(com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo) -> b
com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint$Builder -> com.minook.zeppa.b.b:
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint build() -> a
com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint$InsertDeviceInfo -> com.minook.zeppa.b.c:
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint this$0 -> a
com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint$ListDeviceInfo -> com.minook.zeppa.b.d:
    java.lang.String cursor -> cursor
    java.lang.String filter -> filter
    java.lang.Integer limit -> limit
    java.lang.String ordering -> ordering
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint this$0 -> a
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint$ListDeviceInfo setCursor(java.lang.String) -> a
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint$ListDeviceInfo setFilter(java.lang.String) -> b
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint$ListDeviceInfo setLimit(java.lang.Integer) -> a
com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint$RemoveDeviceInfo -> com.minook.zeppa.b.e:
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint this$0 -> a
com.minook.zeppa.deviceinfoendpoint.DeviceinfoendpointRequest -> com.minook.zeppa.b.f:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
com.minook.zeppa.deviceinfoendpoint.model.CollectionResponseDeviceInfo -> com.minook.zeppa.b.a.a:
    java.util.List items -> items
    java.lang.String nextPageToken -> nextPageToken
    java.util.List getItems() -> a
    java.lang.String getNextPageToken() -> b
com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo -> com.minook.zeppa.b.a.b:
    java.lang.Integer bugfix -> bugfix
    java.lang.Long created -> created
    java.lang.Long id -> id
    com.minook.zeppa.deviceinfoendpoint.model.Key key -> key
    java.lang.Long lastLogin -> lastLogin
    java.lang.Boolean loggedIn -> loggedIn
    java.lang.Long ownerId -> ownerId
    java.lang.String phoneType -> phoneType
    java.lang.String registrationId -> registrationId
    java.lang.Integer update -> update
    java.lang.Long updated -> updated
    java.lang.Integer version -> version
    com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo setBugfix(java.lang.Integer) -> a
    com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo setOwnerId(java.lang.Long) -> a
    com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo setPhoneType(java.lang.String) -> a
    java.lang.String getRegistrationId() -> a
    com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo setRegistrationId(java.lang.String) -> b
    com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo setUpdate(java.lang.Integer) -> b
    com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo setVersion(java.lang.Integer) -> c
com.minook.zeppa.deviceinfoendpoint.model.Key -> com.minook.zeppa.b.a.c:
    java.lang.String appId -> appId
    java.lang.Boolean complete -> complete
    java.lang.Long id -> id
    java.lang.String kind -> kind
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    com.minook.zeppa.deviceinfoendpoint.model.Key parent -> parent
com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint -> com.minook.zeppa.c.a:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> a
    com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint$InsertEventComment insertEventComment(com.minook.zeppa.eventcommentendpoint.model.EventComment) -> a
    com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint$ListEventComment listEventComment() -> a
com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint$Builder -> com.minook.zeppa.c.b:
    com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint build() -> a
com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint$InsertEventComment -> com.minook.zeppa.c.c:
    com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint this$0 -> a
com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint$ListEventComment -> com.minook.zeppa.c.d:
    java.lang.String cursor -> cursor
    java.lang.String filter -> filter
    java.lang.Integer limit -> limit
    java.lang.String ordering -> ordering
    com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint this$0 -> a
    com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint$ListEventComment setCursor(java.lang.String) -> a
    com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint$ListEventComment setFilter(java.lang.String) -> b
    com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint$ListEventComment setLimit(java.lang.Integer) -> a
    com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint$ListEventComment setOrdering(java.lang.String) -> c
com.minook.zeppa.eventcommentendpoint.EventcommentendpointRequest -> com.minook.zeppa.c.e:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
com.minook.zeppa.eventcommentendpoint.model.CollectionResponseEventComment -> com.minook.zeppa.c.a.a:
    java.util.List items -> items
    java.lang.String nextPageToken -> nextPageToken
    java.util.List getItems() -> a
    java.lang.String getNextPageToken() -> b
com.minook.zeppa.eventcommentendpoint.model.EventComment -> com.minook.zeppa.c.a.b:
    java.lang.Long commenterId -> commenterId
    java.lang.Long created -> created
    java.lang.Long eventId -> eventId
    java.lang.Long id -> id
    com.minook.zeppa.eventcommentendpoint.model.Key key -> key
    java.lang.String text -> text
    java.lang.Long updated -> updated
    java.lang.Long getCommenterId() -> a
    com.minook.zeppa.eventcommentendpoint.model.EventComment setCommenterId(java.lang.Long) -> a
    java.lang.Long getCreated() -> b
    com.minook.zeppa.eventcommentendpoint.model.EventComment setEventId(java.lang.Long) -> b
    java.lang.Long getId() -> c
    java.lang.String getText() -> d
    com.minook.zeppa.eventcommentendpoint.model.EventComment setText(java.lang.String) -> a
com.minook.zeppa.eventcommentendpoint.model.Key -> com.minook.zeppa.c.a.c:
    java.lang.String appId -> appId
    java.lang.Boolean complete -> complete
    java.lang.Long id -> id
    java.lang.String kind -> kind
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    com.minook.zeppa.eventcommentendpoint.model.Key parent -> parent
com.minook.zeppa.eventtagendpoint.Eventtagendpoint -> com.minook.zeppa.d.a:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> a
    com.minook.zeppa.eventtagendpoint.Eventtagendpoint$InsertEventTag insertEventTag(com.minook.zeppa.eventtagendpoint.model.EventTag) -> a
    com.minook.zeppa.eventtagendpoint.Eventtagendpoint$ListEventTag listEventTag() -> a
com.minook.zeppa.eventtagendpoint.Eventtagendpoint$Builder -> com.minook.zeppa.d.b:
    com.minook.zeppa.eventtagendpoint.Eventtagendpoint build() -> a
com.minook.zeppa.eventtagendpoint.Eventtagendpoint$InsertEventTag -> com.minook.zeppa.d.c:
    com.minook.zeppa.eventtagendpoint.Eventtagendpoint this$0 -> a
com.minook.zeppa.eventtagendpoint.Eventtagendpoint$ListEventTag -> com.minook.zeppa.d.d:
    java.lang.String cursor -> cursor
    java.lang.String filter -> filter
    java.lang.Integer limit -> limit
    java.lang.String ordering -> ordering
    com.minook.zeppa.eventtagendpoint.Eventtagendpoint this$0 -> a
    com.minook.zeppa.eventtagendpoint.Eventtagendpoint$ListEventTag setCursor(java.lang.String) -> a
    com.minook.zeppa.eventtagendpoint.Eventtagendpoint$ListEventTag setFilter(java.lang.String) -> b
    com.minook.zeppa.eventtagendpoint.Eventtagendpoint$ListEventTag setLimit(java.lang.Integer) -> a
    com.minook.zeppa.eventtagendpoint.Eventtagendpoint$ListEventTag setOrdering(java.lang.String) -> c
com.minook.zeppa.eventtagendpoint.EventtagendpointRequest -> com.minook.zeppa.d.e:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
com.minook.zeppa.eventtagendpoint.model.CollectionResponseEventTag -> com.minook.zeppa.d.a.a:
    java.util.List items -> items
    java.lang.String nextPageToken -> nextPageToken
    java.util.List getItems() -> a
    java.lang.String getNextPageToken() -> b
com.minook.zeppa.eventtagendpoint.model.EventTag -> com.minook.zeppa.d.a.b:
    java.lang.Long created -> created
    java.lang.Long id -> id
    com.minook.zeppa.eventtagendpoint.model.Key key -> key
    java.lang.Long ownerId -> ownerId
    java.lang.String tagText -> tagText
    java.lang.Long updated -> updated
    java.lang.Long getId() -> a
    java.lang.Long getOwnerId() -> b
    com.minook.zeppa.eventtagendpoint.model.EventTag setOwnerId(java.lang.Long) -> a
    java.lang.String getTagText() -> c
    com.minook.zeppa.eventtagendpoint.model.EventTag setTagText(java.lang.String) -> a
com.minook.zeppa.eventtagendpoint.model.Key -> com.minook.zeppa.d.a.c:
    java.lang.String appId -> appId
    java.lang.Boolean complete -> complete
    java.lang.Long id -> id
    java.lang.String kind -> kind
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    com.minook.zeppa.eventtagendpoint.model.Key parent -> parent
com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint -> com.minook.zeppa.e.a:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> a
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint$InsertEventTagFollow insertEventTagFollow(com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow) -> a
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint$ListEventTagFollow listEventTagFollow() -> a
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint$RemoveEventTagFollow removeEventTagFollow(java.lang.Long) -> a
com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint$Builder -> com.minook.zeppa.e.b:
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint build() -> a
com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint$InsertEventTagFollow -> com.minook.zeppa.e.c:
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint this$0 -> a
com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint$ListEventTagFollow -> com.minook.zeppa.e.d:
    java.lang.String cursor -> cursor
    java.lang.String filter -> filter
    java.lang.Integer limit -> limit
    java.lang.String ordering -> ordering
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint this$0 -> a
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint$ListEventTagFollow setCursor(java.lang.String) -> a
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint$ListEventTagFollow setFilter(java.lang.String) -> b
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint$ListEventTagFollow setLimit(java.lang.Integer) -> a
com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint$RemoveEventTagFollow -> com.minook.zeppa.e.e:
    java.lang.Long id -> id
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint this$0 -> a
com.minook.zeppa.eventtagfollowendpoint.EventtagfollowendpointRequest -> com.minook.zeppa.e.f:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
com.minook.zeppa.eventtagfollowendpoint.model.CollectionResponseEventTagFollow -> com.minook.zeppa.e.a.a:
    java.util.List items -> items
    java.lang.String nextPageToken -> nextPageToken
    java.util.List getItems() -> a
com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow -> com.minook.zeppa.e.a.b:
    java.lang.Long created -> created
    java.lang.Long followerId -> followerId
    java.lang.Long id -> id
    com.minook.zeppa.eventtagfollowendpoint.model.Key key -> key
    java.lang.Long tagId -> tagId
    java.lang.Long tagOwnerId -> tagOwnerId
    java.lang.Long updated -> updated
    com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow setFollowerId(java.lang.Long) -> a
    com.minook.zeppa.eventtagfollowendpoint.model.Key getKey() -> a
    java.lang.Long getTagId() -> b
    com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow setTagId(java.lang.Long) -> b
    com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow setTagOwnerId(java.lang.Long) -> c
com.minook.zeppa.eventtagfollowendpoint.model.Key -> com.minook.zeppa.e.a.c:
    java.lang.String appId -> appId
    java.lang.Boolean complete -> complete
    java.lang.Long id -> id
    java.lang.String kind -> kind
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    com.minook.zeppa.eventtagfollowendpoint.model.Key parent -> parent
    java.lang.Long getId() -> a
com.minook.zeppa.gcm.ZeppaGCMIntentService -> com.minook.zeppa.gcm.ZeppaGCMIntentService:
    java.lang.String TAG -> a
    com.google.android.gms.common.api.GoogleApiClient apiClient -> b
    java.util.List notificationIntents -> c
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void connectApiClient() -> b
    void initializeApiClient(java.lang.String) -> a
    com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential getGoogleAccountCredential() -> a
    void executeNotificationRunnables(android.content.Context,com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential) -> a
com.minook.zeppa.gcm.ZeppaGCMReceiver -> com.minook.zeppa.gcm.ZeppaGCMReceiver:
    java.lang.String TAG -> a
com.minook.zeppa.gcm.ZeppaGCMUtils -> com.minook.zeppa.gcm.a:
    java.lang.String registrationId -> a
    com.minook.zeppa.deviceinfoendpoint.model.DeviceInfo getRegisteredDeviceInstance(android.content.Context,java.lang.Long) -> a
com.minook.zeppa.mediator.AbstractEventTagMediator -> com.minook.zeppa.f.a:
    com.minook.zeppa.eventtagendpoint.model.EventTag eventTag -> a
    java.lang.Long getUserId() -> a
    java.lang.String getText() -> b
    android.view.View convertView(android.view.View) -> a
    java.lang.Long getTagId() -> c
com.minook.zeppa.mediator.AbstractZeppaEventMediator -> com.minook.zeppa.f.b:
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent event -> a
    boolean hasLoadedRelationships -> b
    boolean isLoadingRelationships -> c
    java.util.List relationships -> d
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$OnRelationshipsLoadedListener relationshipListener -> g
    java.util.List comments -> e
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$OnCommentLoadListener commentLoadListener -> h
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus conflictStatus -> f
    int compareTo(com.minook.zeppa.mediator.AbstractZeppaEventMediator) -> a
    android.view.View convertEventListItemView(com.minook.zeppa.activity.AuthenticatedFragmentActivity,android.view.View) -> a
    void launchIntoEventView(android.content.Context) -> a
    android.view.View convertQuickActionBar(android.content.Context,android.view.View) -> a
    java.lang.Long getEventId() -> a
    java.lang.Long getHostId() -> b
    java.lang.Long getEndInMillis() -> c
    java.lang.Long getStartInMillis() -> d
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus getConflictStatus() -> e
    com.minook.zeppa.mediator.AbstractZeppaUserMediator getHostMediator() -> f
    java.util.List getEventRelationships() -> g
    void setEventRelationships(java.util.List) -> a
    boolean getHasLoadedRelationships() -> h
    java.util.List getEventComments() -> i
    void addAllComments(java.util.List) -> b
    void onCommentsLoaded() -> j
    java.util.List getAttendingUserIds() -> k
    java.lang.String getTitle() -> l
    java.lang.String getDisplayLocation() -> m
    java.lang.String getMapsLocation() -> n
    boolean doesMatchEventId(long) -> a
    boolean hostIdDoesMatch(long) -> b
    boolean guestsMayInvite() -> o
    void setHostInfo(android.view.View) -> a
    void setConflictIndicator(android.content.Context,android.widget.ImageView) -> a
    void viewInCalendarApplication(android.content.Context) -> b
    android.content.Intent getToEventViewIntent(android.content.Context) -> c
    void loadEventRelationships(com.minook.zeppa.ZeppaApplication,com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential,com.minook.zeppa.mediator.AbstractZeppaEventMediator$OnRelationshipsLoadedListener) -> a
    int compareTo(java.lang.Object) -> compareTo
com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus -> com.minook.zeppa.f.c:
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus ATTENDING -> a
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus NONE -> b
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus PARTIAL -> c
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus COMPLETE -> d
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus UNKNOWN -> e
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus[] ENUM$VALUES -> f
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus[] values() -> values
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus valueOf(java.lang.String) -> valueOf
com.minook.zeppa.mediator.AbstractZeppaEventMediator$OnCommentLoadListener -> com.minook.zeppa.f.d:
    void onCommentsLoaded() -> b
com.minook.zeppa.mediator.AbstractZeppaEventMediator$OnRelationshipsLoadedListener -> com.minook.zeppa.f.e:
    void onRelationshipsLoaded() -> c
com.minook.zeppa.mediator.AbstractZeppaUserMediator -> com.minook.zeppa.f.f:
    java.util.List setOnImageLoad -> a
    android.graphics.Bitmap userImage -> b
    boolean loadingImage -> c
    boolean didLoadImage -> d
    java.lang.String getGivenName() -> a
    java.lang.String getDisplayName() -> b
    java.lang.String getUnformattedPhoneNumber() -> c
    java.lang.String getImageUrl() -> d
    java.lang.Long getUserId() -> e
    java.lang.String getPrimaryPhoneNumber() -> f
    void setImageWhenReady(android.widget.ImageView) -> a
    void loadImageInAsync(java.lang.String) -> a
    void onImageLoad() -> g
    int compareTo(com.minook.zeppa.mediator.AbstractZeppaUserMediator) -> a
    int compareTo(java.lang.Object) -> compareTo
    void access$1(com.minook.zeppa.mediator.AbstractZeppaUserMediator,boolean) -> a
    void access$2(com.minook.zeppa.mediator.AbstractZeppaUserMediator) -> b
    void access$3(com.minook.zeppa.mediator.AbstractZeppaUserMediator,boolean) -> b
com.minook.zeppa.mediator.AbstractZeppaUserMediator$1 -> com.minook.zeppa.f.g:
    com.minook.zeppa.mediator.AbstractZeppaUserMediator this$0 -> a
    android.graphics.Bitmap doInBackground(java.lang.Object[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.mediator.DefaultEventTagMediator -> com.minook.zeppa.f.h:
    com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow myFollow -> b
    android.view.View convertView(android.view.View) -> a
    boolean isFollowing() -> d
    void followTagInAsync(com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential,android.widget.CheckedTextView) -> a
    void unfollowTagInAsync(com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential,android.widget.CheckedTextView) -> b
    void access$0(com.minook.zeppa.mediator.DefaultEventTagMediator,com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow) -> a
    com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow access$1(com.minook.zeppa.mediator.DefaultEventTagMediator) -> a
com.minook.zeppa.mediator.DefaultEventTagMediator$1 -> com.minook.zeppa.f.i:
    android.widget.CheckedTextView view -> b
    com.minook.zeppa.mediator.DefaultEventTagMediator this$0 -> a
    com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow doInBackground(java.lang.Object[]) -> a
    void onPostExecute(com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.mediator.DefaultEventTagMediator$2 -> com.minook.zeppa.f.j:
    com.minook.zeppa.eventtagfollowendpoint.model.EventTagFollow follow -> b
    android.widget.CheckedTextView view -> c
    com.minook.zeppa.mediator.DefaultEventTagMediator this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.mediator.DefaultUserInfoMediator -> com.minook.zeppa.f.k:
    com.minook.zeppa.zeppauserinfoendpoint.model.ZeppaUserInfo userInfo -> c
    com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship relationship -> d
    java.util.List minglingUserIds -> e
    boolean hasLoadedInitialTags -> f
    java.lang.String getGivenName() -> a
    java.lang.String getFamilyName() -> g
    java.lang.String getDisplayName() -> b
    java.lang.String getGmail() -> h
    java.lang.Long getUserId() -> e
    java.lang.String getUnformattedPhoneNumber() -> c
    java.lang.String getImageUrl() -> d
    void setHasLoadedInitialTags(boolean) -> a
    com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship getUserRelationship() -> i
    void setUserRelationship(com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship) -> a
    void setMinglingWithIds(java.util.List) -> a
    java.util.List getMinglingWithIds() -> j
    boolean isMingling() -> k
    boolean requestPending() -> l
    boolean didSendRequest() -> m
    android.view.View convertFriendListItemView(com.minook.zeppa.activity.AuthenticatedFragmentActivity,android.view.View) -> a
    android.view.View convertInviteListItemView(android.view.View) -> a
    android.view.View convertRequestConnectListItemView(android.view.View) -> b
    void convertRespondConnectListItemView(com.minook.zeppa.activity.AuthenticatedFragmentActivity,android.view.View) -> b
    void removeRelationship(com.minook.zeppa.ZeppaApplication,com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential) -> a
    void acceptMingleRequest(com.minook.zeppa.ZeppaApplication,com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential) -> b
    void sendMingleRequest(com.minook.zeppa.ZeppaApplication,com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential) -> c
    void sendTextMessage(android.content.Context) -> a
    void sendEmail(android.content.Context,java.lang.String) -> a
    android.content.Intent getToUserIntent(android.content.Context) -> b
com.minook.zeppa.mediator.DefaultZeppaEventMediator -> com.minook.zeppa.f.l:
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship relationship -> g
    com.minook.zeppa.mediator.DefaultZeppaEventMediator$OnAttendanceChangeListener attendanceChangeListener -> h
    java.lang.String TAG -> i
    android.view.View convertQuickActionBar(android.content.Context,android.view.View) -> a
    void setHostInfo(android.view.View) -> a
    void setConflictIndicator(android.content.Context,android.widget.ImageView) -> a
    void setConflictImageDrawable(android.widget.ImageView) -> a
    boolean isWatching() -> p
    boolean isAttending() -> q
    boolean relationshipDoesMatch(com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship) -> a
    void onWatchButtonClicked(com.minook.zeppa.activity.AuthenticatedFragmentActivity) -> a
    void onTextButtonClicked(com.minook.zeppa.activity.AuthenticatedFragmentActivity) -> b
    void onJoinButtonClicked(com.minook.zeppa.activity.AuthenticatedFragmentActivity) -> c
    void launchIntoEventView(android.content.Context) -> a
    android.content.Intent getToEventViewIntent(android.content.Context) -> c
    java.lang.String access$0() -> r
    void access$1(com.minook.zeppa.mediator.DefaultZeppaEventMediator,android.widget.ImageView) -> a
com.minook.zeppa.mediator.DefaultZeppaEventMediator$DetermineAndSetConflictStatus -> com.minook.zeppa.f.m:
    android.content.Context context -> b
    android.widget.ImageView image -> c
    java.lang.String[] PROJECTION -> d
    com.minook.zeppa.mediator.DefaultZeppaEventMediator this$0 -> a
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.minook.zeppa.mediator.AbstractZeppaEventMediator$ConflictStatus) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.minook.zeppa.mediator.DefaultZeppaEventMediator$OnAttendanceChangeListener -> com.minook.zeppa.f.n:
    void onAttendanceChanged() -> k
com.minook.zeppa.mediator.DefaultZeppaEventMediator$OnMinglerRelationshipsLoadedListener -> com.minook.zeppa.f.o:
    void onMinglerRelationshipsLoaded() -> a
    void onErrorLoadingMinglerRelationships() -> b
com.minook.zeppa.mediator.MyEventTagMediator -> com.minook.zeppa.f.p:
    android.view.View convertView(android.view.View) -> a
com.minook.zeppa.mediator.MyZeppaEventMediator -> com.minook.zeppa.f.q:
    void setHostInfo(android.view.View) -> a
    void setConflictIndicator(android.content.Context,android.widget.ImageView) -> a
    android.view.View convertQuickActionBar(android.content.Context,android.view.View) -> a
    void launchIntoEventView(android.content.Context) -> a
    android.content.Intent getToEventViewIntent(android.content.Context) -> c
com.minook.zeppa.mediator.MyZeppaUserMediator -> com.minook.zeppa.f.r:
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUser user -> c
    java.lang.String getGivenName() -> a
    java.lang.String getFamilyName() -> g
    java.lang.String getDisplayName() -> b
    java.lang.Long getUserId() -> e
    java.lang.String getGmail() -> h
    java.lang.String getUnformattedPhoneNumber() -> c
    java.lang.String getImageUrl() -> d
    boolean updateUserInfoWithBlocking(com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean isValidString(java.lang.String) -> b
com.minook.zeppa.observer.MemoryObserver -> com.minook.zeppa.g.a:
    boolean onMemoryWarning() -> a
    boolean onMemoryLow() -> b
    boolean onMemoryCritical() -> c
com.minook.zeppa.runnable.BaseRunnable -> com.minook.zeppa.h.a:
    com.minook.zeppa.ZeppaApplication application -> a
    com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential credential -> b
    com.google.api.client.http.HttpTransport transport -> c
    com.google.api.client.json.gson.GsonFactory factory -> d
    com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint buildUserInfoEndpoint() -> a
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint buildZeppaUserToUserRelationshipEndpoint() -> b
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint buildEventEndpoint() -> c
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint buildEventRelationshipEndpoint() -> d
    com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint buildNotificationEndpoint() -> e
    com.minook.zeppa.eventtagfollowendpoint.Eventtagfollowendpoint buildEventTagFollowEndpoint() -> f
    com.minook.zeppa.eventtagendpoint.Eventtagendpoint buildEventTagEndpoint() -> g
    com.minook.zeppa.deviceinfoendpoint.Deviceinfoendpoint buildDeviceInfoEndpoint() -> h
    com.minook.zeppa.eventcommentendpoint.Eventcommentendpoint buildCommentEndpoint() -> i
com.minook.zeppa.runnable.FetchCommentsRunnable -> com.minook.zeppa.h.b:
    com.minook.zeppa.mediator.AbstractZeppaEventMediator mediator -> c
    long minCommentPostTime -> d
    void run() -> run
    com.minook.zeppa.mediator.AbstractZeppaEventMediator access$0(com.minook.zeppa.runnable.FetchCommentsRunnable) -> a
com.minook.zeppa.runnable.FetchCommentsRunnable$1 -> com.minook.zeppa.h.c:
    com.minook.zeppa.runnable.FetchCommentsRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchDefaultTagsForUserRunnable -> com.minook.zeppa.h.d:
    long userIdSelf -> c
    long userIdMingler -> d
    com.minook.zeppa.singleton.EventTagSingleton$OnTagLoadListener listener -> e
    void run() -> run
    com.minook.zeppa.singleton.EventTagSingleton$OnTagLoadListener access$0(com.minook.zeppa.runnable.FetchDefaultTagsForUserRunnable) -> a
com.minook.zeppa.runnable.FetchDefaultTagsForUserRunnable$1 -> com.minook.zeppa.h.e:
    com.minook.zeppa.runnable.FetchDefaultTagsForUserRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchEventToUserRelationshipsRunnable -> com.minook.zeppa.h.f:
    long eventId -> c
    long userId -> d
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$OnRelationshipsLoadedListener listener -> e
    java.util.List loadedRelationships -> f
    void run() -> run
    long access$0(com.minook.zeppa.runnable.FetchEventToUserRelationshipsRunnable) -> a
    java.util.List access$1(com.minook.zeppa.runnable.FetchEventToUserRelationshipsRunnable) -> b
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$OnRelationshipsLoadedListener access$2(com.minook.zeppa.runnable.FetchEventToUserRelationshipsRunnable) -> c
com.minook.zeppa.runnable.FetchEventToUserRelationshipsRunnable$1 -> com.minook.zeppa.h.g:
    com.minook.zeppa.runnable.FetchEventToUserRelationshipsRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchEventsForMinglerRunnable -> com.minook.zeppa.h.h:
    long userId -> c
    long minglerId -> d
    void run() -> run
com.minook.zeppa.runnable.FetchEventsForMinglerRunnable$1 -> com.minook.zeppa.h.i:
    com.minook.zeppa.runnable.FetchEventsForMinglerRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchInitialEventsRunnable -> com.minook.zeppa.h.j:
    java.lang.Long userId -> c
    void run() -> run
com.minook.zeppa.runnable.FetchInitialEventsRunnable$1 -> com.minook.zeppa.h.k:
    com.minook.zeppa.runnable.FetchInitialEventsRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchInitialMinglersRunnable -> com.minook.zeppa.h.l:
    long userId -> c
    void run() -> run
com.minook.zeppa.runnable.FetchInitialMinglersRunnable$1 -> com.minook.zeppa.h.m:
    com.minook.zeppa.runnable.FetchInitialMinglersRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchInitialNotificationsRunnable -> com.minook.zeppa.h.n:
    long userId -> c
    java.lang.String nextPageToken -> d
    void run() -> run
    long access$0(com.minook.zeppa.runnable.FetchInitialNotificationsRunnable) -> a
com.minook.zeppa.runnable.FetchInitialNotificationsRunnable$1 -> com.minook.zeppa.h.o:
    com.minook.zeppa.runnable.FetchInitialNotificationsRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchMoreEventsRunnable -> com.minook.zeppa.h.p:
    long userId -> c
    java.lang.String nextPageToken -> d
    void run() -> run
    java.lang.String access$0(com.minook.zeppa.runnable.FetchMoreEventsRunnable) -> a
com.minook.zeppa.runnable.FetchMoreEventsRunnable$1 -> com.minook.zeppa.h.q:
    com.minook.zeppa.runnable.FetchMoreEventsRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchMutualMingersRunnable -> com.minook.zeppa.h.r:
    long userId -> c
    com.minook.zeppa.mediator.DefaultUserInfoMediator mediator -> d
    com.minook.zeppa.mediator.DefaultZeppaEventMediator$OnMinglerRelationshipsLoadedListener listener -> e
    void run() -> run
    com.minook.zeppa.mediator.DefaultZeppaEventMediator$OnMinglerRelationshipsLoadedListener access$0(com.minook.zeppa.runnable.FetchMutualMingersRunnable) -> a
com.minook.zeppa.runnable.FetchMutualMingersRunnable$1 -> com.minook.zeppa.h.s:
    com.minook.zeppa.runnable.FetchMutualMingersRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchMutualMingersRunnable$2 -> com.minook.zeppa.h.t:
    com.minook.zeppa.runnable.FetchMutualMingersRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchMutualMingersRunnable$3 -> com.minook.zeppa.h.u:
    com.minook.zeppa.runnable.FetchMutualMingersRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FetchMyEventTagsRunnable -> com.minook.zeppa.h.v:
    java.lang.Long userId -> c
    void run() -> run
com.minook.zeppa.runnable.FetchMyEventTagsRunnable$1 -> com.minook.zeppa.h.w:
    com.minook.zeppa.runnable.FetchMyEventTagsRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.FindMinglersRunnable -> com.minook.zeppa.h.x:
    void run() -> run
    void executeQuery(java.lang.String) -> a
    java.lang.String getFormattedNumber(android.database.Cursor) -> a
    java.lang.String getEmail(android.database.Cursor) -> b
    boolean numberIsRecognized(java.lang.String) -> b
    boolean emailIsRecognized(java.lang.String) -> c
com.minook.zeppa.runnable.FindMinglersRunnable$1 -> com.minook.zeppa.h.y:
    com.minook.zeppa.runnable.FindMinglersRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.InsertDeviceRunnable -> com.minook.zeppa.h.z:
    java.lang.Long userId -> c
    void run() -> run
com.minook.zeppa.runnable.InsertZeppaUserToUserRelationshipRunnable -> com.minook.zeppa.h.aa:
    com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship relationship -> c
    void run() -> run
com.minook.zeppa.runnable.NotificationReceivedRunnable -> com.minook.zeppa.h.ab:
    long notificationId -> c
    long userId -> d
    android.app.NotificationManager mNotificationManager -> e
    com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification notification -> f
    com.minook.zeppa.zeppauserinfoendpoint.model.ZeppaUserInfo userInfo -> g
    com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship userRelationship -> h
    com.minook.zeppa.mediator.AbstractZeppaEventMediator eventMediator -> i
    void run() -> run
    void pushNotification() -> j
    com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification access$0(com.minook.zeppa.runnable.NotificationReceivedRunnable) -> a
com.minook.zeppa.runnable.NotificationReceivedRunnable$1 -> com.minook.zeppa.h.ac:
    com.minook.zeppa.runnable.NotificationReceivedRunnable this$0 -> a
    void run() -> run
com.minook.zeppa.runnable.RemoveCurrentDeviceRunnable -> com.minook.zeppa.h.ad:
    void run() -> run
com.minook.zeppa.runnable.RemoveUserRelationshipRunnable -> com.minook.zeppa.h.ae:
    long relationshipId -> c
    void run() -> run
com.minook.zeppa.runnable.SendEventInvitesRunnable -> com.minook.zeppa.h.af:
    java.util.List insertRelationships -> c
    java.util.List updateEventRelationships -> d
    long eventId -> e
    long userId -> f
    com.minook.zeppa.mediator.AbstractZeppaEventMediator$OnRelationshipsLoadedListener listener -> g
    void run() -> run
com.minook.zeppa.runnable.SyncZeppaCalendarRunnable -> com.minook.zeppa.h.ag:
    java.lang.String[] PROJECTION -> c
    void run() -> run
com.minook.zeppa.runnable.ThreadManager -> com.minook.zeppa.h.ah:
    java.util.concurrent.ExecutorService executor -> a
    void execute(java.lang.Runnable) -> a
com.minook.zeppa.runnable.UpdateEventToUserRelationshipRunnable -> com.minook.zeppa.h.ai:
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship relationship -> c
    void run() -> run
com.minook.zeppa.runnable.UpdateUserToUserRelationshipRunnable -> com.minook.zeppa.h.aj:
    com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship relationship -> c
    void run() -> run
com.minook.zeppa.singleton.EventTagSingleton -> com.minook.zeppa.i.a:
    com.minook.zeppa.singleton.EventTagSingleton singleton -> a
    java.lang.String TAG -> b
    java.util.List tagMediators -> c
    com.minook.zeppa.adapter.tagadapter.MyTagAdapter waitingAdapter -> d
    boolean hasLoadedTags -> e
    com.minook.zeppa.singleton.EventTagSingleton getInstance() -> a
    void restore() -> b
    com.minook.zeppa.eventtagendpoint.model.EventTag newTagInstance() -> c
    java.lang.Long getUserId() -> f
    java.util.List getMyTags() -> d
    com.minook.zeppa.mediator.AbstractEventTagMediator getTagMediatorWithId(java.lang.Long) -> a
    void updateEventTagsForUser(long,java.util.List) -> a
    java.util.List getTagsFrom(java.util.List) -> a
    void onMyTagsLoaded() -> e
    java.util.List getTagMediatorsForUser(long) -> a
    void addEventTags(java.util.List) -> b
    void removeEventTagsForUser(long) -> b
    com.minook.zeppa.mediator.MyEventTagMediator insertEventTag(com.minook.zeppa.eventtagendpoint.model.EventTag,com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential) -> a
com.minook.zeppa.singleton.EventTagSingleton$OnTagLoadListener -> com.minook.zeppa.i.b:
    void onTagsLoaded() -> l
    void onErrorLoadingTags() -> m
com.minook.zeppa.singleton.NotificationSingleton -> com.minook.zeppa.i.c:
    com.minook.zeppa.singleton.NotificationSingleton singleton -> a
    java.lang.String TAG -> b
    java.util.List notifications -> c
    java.util.List loadListeners -> d
    boolean hasLoadedInitial -> e
    boolean isFetchingNotifications -> f
    com.minook.zeppa.singleton.NotificationSingleton getInstance() -> a
    void restore() -> b
    void removeNotificationsForEvent(long) -> a
    void onLoadedNotifications() -> c
    int getNotificationTypeOrder(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> a
    java.lang.String getNotificationTitle(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> b
    java.lang.String getNotificationMessage(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> c
    boolean alreadyHoldingNotification(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> e
    void addNotification(com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification) -> d
    void notifyObservers() -> d
com.minook.zeppa.singleton.NotificationSingleton$NotificationLoadListener -> com.minook.zeppa.i.d:
    void onNotificationsLoaded() -> a
com.minook.zeppa.singleton.ZeppaEventSingleton -> com.minook.zeppa.i.e:
    java.lang.String TAG -> a
    com.minook.zeppa.singleton.ZeppaEventSingleton singleton -> b
    java.util.List eventMediators -> c
    java.util.List eventLoadListeners -> d
    boolean hasLoadedInitialEvents -> e
    boolean isLoadingEvents -> f
    boolean isMoreEvents -> g
    java.lang.String nextRelationshipPageToken -> h
    long lastUpdateCallTime -> i
    com.minook.zeppa.singleton.ZeppaEventSingleton getInstance() -> a
    void restore() -> b
    void setNextRelationshipPageToken(java.lang.String) -> a
    void clearOldEvents() -> c
    void removeEventById(long) -> a
    void onInitialEventsLoaded() -> d
    void onFinishLoading() -> e
    void notifyObservers() -> f
    com.minook.zeppa.mediator.AbstractZeppaEventMediator getEventById(java.lang.Long) -> a
    java.util.List getEventMediatorsForFriend(long) -> b
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent createZeppaEventWithBlocking(com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential,com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent) -> a
    void addMediator(com.minook.zeppa.mediator.AbstractZeppaEventMediator) -> a
    void removeMediatorsForUser(long) -> c
    boolean relationshipAlreadyHeld(com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship) -> a
com.minook.zeppa.singleton.ZeppaEventSingleton$OnZeppaEventLoadListener -> com.minook.zeppa.i.f:
    void onZeppaEventsLoaded() -> c
com.minook.zeppa.singleton.ZeppaUserSingleton -> com.minook.zeppa.i.g:
    com.minook.zeppa.singleton.ZeppaUserSingleton singleton -> a
    java.lang.String TAG -> b
    com.minook.zeppa.mediator.MyZeppaUserMediator userMediator -> c
    java.util.List heldUserMediators -> d
    java.util.Date lastFindMinglersTaskExecutionDate -> e
    boolean hasLoadedInitial -> f
    java.util.List minglerLoadListeners -> g
    com.minook.zeppa.singleton.ZeppaUserSingleton getInstance() -> a
    void restore() -> b
    void setUser(com.minook.zeppa.zeppauserendpoint.model.ZeppaUser) -> a
    com.minook.zeppa.mediator.MyZeppaUserMediator fetchLoggedInUserWithBlocking(com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential) -> a
    void executeFindMinglerTask(com.minook.zeppa.ZeppaApplication,com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential) -> a
    void addDefaultZeppaUserMediator(com.minook.zeppa.zeppauserinfoendpoint.model.ZeppaUserInfo,com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship) -> a
    void notifyObservers() -> c
    boolean hasLoadedInitial() -> d
    void setHasLoadedInitial() -> e
    com.minook.zeppa.mediator.MyZeppaUserMediator getUserMediator() -> f
    java.lang.Long getUserId() -> g
    boolean listContainsId(java.util.List,long) -> a
    java.util.ArrayList getMinglersFrom(java.util.List) -> a
    java.util.List getMinglerMediators() -> h
    java.util.List getPossibleFriendInfoMediators() -> i
    java.util.List getPendingFriendRequests() -> j
    com.minook.zeppa.mediator.AbstractZeppaUserMediator getAbstractUserMediatorById(java.lang.Long) -> a
    boolean emailIsRecognized(java.lang.String) -> a
    boolean numberIsRecognized(java.lang.String) -> b
com.minook.zeppa.singleton.ZeppaUserSingleton$OnMinglersLoadListener -> com.minook.zeppa.i.h:
    void onMinglersLoaded() -> a
com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint -> com.minook.zeppa.j.a:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> a
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$GetZeppaEvent getZeppaEvent(java.lang.Long) -> a
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$InsertZeppaEvent insertZeppaEvent(com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent) -> a
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$ListZeppaEvent listZeppaEvent() -> a
com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$Builder -> com.minook.zeppa.j.b:
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint build() -> a
com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$GetZeppaEvent -> com.minook.zeppa.j.c:
    java.lang.Long id -> id
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint this$0 -> a
com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$InsertZeppaEvent -> com.minook.zeppa.j.d:
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint this$0 -> a
com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$ListZeppaEvent -> com.minook.zeppa.j.e:
    java.lang.String cursor -> cursor
    java.lang.String filter -> filter
    java.lang.Integer limit -> limit
    java.lang.String ordering -> ordering
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint this$0 -> a
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$ListZeppaEvent setCursor(java.lang.String) -> a
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$ListZeppaEvent setFilter(java.lang.String) -> b
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$ListZeppaEvent setLimit(java.lang.Integer) -> a
    com.minook.zeppa.zeppaeventendpoint.Zeppaeventendpoint$ListZeppaEvent setOrdering(java.lang.String) -> c
com.minook.zeppa.zeppaeventendpoint.ZeppaeventendpointRequest -> com.minook.zeppa.j.f:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
com.minook.zeppa.zeppaeventendpoint.model.CollectionResponseZeppaEvent -> com.minook.zeppa.j.a.a:
    java.util.List items -> items
    java.lang.String nextPageToken -> nextPageToken
    java.util.List getItems() -> a
    java.lang.String getNextPageToken() -> b
com.minook.zeppa.zeppaeventendpoint.model.Key -> com.minook.zeppa.j.a.b:
    java.lang.String appId -> appId
    java.lang.Boolean complete -> complete
    java.lang.Long id -> id
    java.lang.String kind -> kind
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    com.minook.zeppa.zeppaeventendpoint.model.Key parent -> parent
    java.lang.Long getId() -> a
com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent -> com.minook.zeppa.j.a.c:
    java.lang.Long created -> created
    java.lang.String description -> description
    java.lang.String displayLocation -> displayLocation
    java.lang.Long end -> end
    java.lang.String googleCalendarEventId -> googleCalendarEventId
    java.lang.String googleCalendarId -> googleCalendarId
    java.lang.Boolean guestsMayInvite -> guestsMayInvite
    java.lang.Long hostId -> hostId
    java.lang.String iCalUID -> iCalUID
    java.lang.Long id -> id
    java.util.List invitedUserIds -> invitedUserIds
    com.minook.zeppa.zeppaeventendpoint.model.Key key -> key
    java.lang.String mapsLocation -> mapsLocation
    java.lang.String privacy -> privacy
    java.lang.Long start -> start
    java.util.List tagIds -> tagIds
    java.lang.String title -> title
    java.lang.Long updated -> updated
    java.lang.String getDescription() -> a
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setDescription(java.lang.String) -> a
    java.lang.String getDisplayLocation() -> b
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setDisplayLocation(java.lang.String) -> b
    java.lang.Long getEnd() -> c
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setEnd(java.lang.Long) -> a
    java.lang.Boolean getGuestsMayInvite() -> d
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setGuestsMayInvite(java.lang.Boolean) -> a
    java.lang.Long getHostId() -> e
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setHostId(java.lang.Long) -> b
    java.lang.Long getId() -> f
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setInvitedUserIds(java.util.List) -> a
    com.minook.zeppa.zeppaeventendpoint.model.Key getKey() -> g
    java.lang.String getMapsLocation() -> h
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setMapsLocation(java.lang.String) -> c
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setPrivacy(java.lang.String) -> d
    java.lang.Long getStart() -> i
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setStart(java.lang.Long) -> c
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setTagIds(java.util.List) -> b
    java.lang.String getTitle() -> j
    com.minook.zeppa.zeppaeventendpoint.model.ZeppaEvent setTitle(java.lang.String) -> e
com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint -> com.minook.zeppa.k.a:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> a
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$InsertZeppaEventToUserRelationship insertZeppaEventToUserRelationship(com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship) -> a
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$ListZeppaEventToUserRelationship listZeppaEventToUserRelationship() -> a
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$UpdateZeppaEventToUserRelationship updateZeppaEventToUserRelationship(com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship) -> b
com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$Builder -> com.minook.zeppa.k.b:
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint build() -> a
com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$InsertZeppaEventToUserRelationship -> com.minook.zeppa.k.c:
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint this$0 -> a
com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$ListZeppaEventToUserRelationship -> com.minook.zeppa.k.d:
    java.lang.String cursor -> cursor
    java.lang.String filter -> filter
    java.lang.Integer limit -> limit
    java.lang.String ordering -> ordering
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint this$0 -> a
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$ListZeppaEventToUserRelationship setCursor(java.lang.String) -> a
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$ListZeppaEventToUserRelationship setFilter(java.lang.String) -> b
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$ListZeppaEventToUserRelationship setLimit(java.lang.Integer) -> a
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$ListZeppaEventToUserRelationship setOrdering(java.lang.String) -> c
com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint$UpdateZeppaEventToUserRelationship -> com.minook.zeppa.k.e:
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.Zeppaeventtouserrelationshipendpoint this$0 -> a
com.minook.zeppa.zeppaeventtouserrelationshipendpoint.ZeppaeventtouserrelationshipendpointRequest -> com.minook.zeppa.k.f:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.CollectionResponseZeppaEventToUserRelationship -> com.minook.zeppa.k.a.a:
    java.util.List items -> items
    java.lang.String nextPageToken -> nextPageToken
    java.util.List getItems() -> a
    java.lang.String getNextPageToken() -> b
com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.Key -> com.minook.zeppa.k.a.b:
    java.lang.String appId -> appId
    java.lang.Boolean complete -> complete
    java.lang.Long id -> id
    java.lang.String kind -> kind
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.Key parent -> parent
com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship -> com.minook.zeppa.k.a.c:
    java.lang.Long created -> created
    java.lang.Long eventHostId -> eventHostId
    java.lang.Long eventId -> eventId
    java.lang.Long expires -> expires
    java.lang.Long id -> id
    java.lang.Long invitedByUserId -> invitedByUserId
    java.lang.Boolean isAttending -> isAttending
    java.lang.Boolean isRecommended -> isRecommended
    java.lang.Boolean isWatching -> isWatching
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.Key key -> key
    java.lang.Long updated -> updated
    java.lang.Long userId -> userId
    java.lang.Boolean wasInvited -> wasInvited
    java.lang.Long getEventHostId() -> a
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship setEventHostId(java.lang.Long) -> a
    java.lang.Long getEventId() -> b
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship setEventId(java.lang.Long) -> b
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship setExpires(java.lang.Long) -> c
    java.lang.Long getId() -> c
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship setInvitedByUserId(java.lang.Long) -> d
    java.lang.Boolean getIsAttending() -> d
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship setIsAttending(java.lang.Boolean) -> a
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship setIsRecommended(java.lang.Boolean) -> b
    java.lang.Boolean getIsWatching() -> e
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship setIsWatching(java.lang.Boolean) -> c
    java.lang.Long getUserId() -> f
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship setUserId(java.lang.Long) -> e
    java.lang.Boolean getWasInvited() -> g
    com.minook.zeppa.zeppaeventtouserrelationshipendpoint.model.ZeppaEventToUserRelationship setWasInvited(java.lang.Boolean) -> d
com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint -> com.minook.zeppa.l.a:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> a
    com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint$GetZeppaNotification getZeppaNotification(java.lang.Long) -> a
    com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint$ListZeppaNotification listZeppaNotification() -> a
com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint$Builder -> com.minook.zeppa.l.b:
    com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint build() -> a
com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint$GetZeppaNotification -> com.minook.zeppa.l.c:
    java.lang.Long id -> id
    com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint this$0 -> a
com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint$ListZeppaNotification -> com.minook.zeppa.l.d:
    java.lang.String cursor -> cursor
    java.lang.String filter -> filter
    java.lang.Integer limit -> limit
    java.lang.String ordering -> ordering
    com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint this$0 -> a
    com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint$ListZeppaNotification setCursor(java.lang.String) -> a
    com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint$ListZeppaNotification setFilter(java.lang.String) -> b
    com.minook.zeppa.zeppanotificationendpoint.Zeppanotificationendpoint$ListZeppaNotification setLimit(java.lang.Integer) -> a
com.minook.zeppa.zeppanotificationendpoint.ZeppanotificationendpointRequest -> com.minook.zeppa.l.e:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
com.minook.zeppa.zeppanotificationendpoint.model.CollectionResponseZeppaNotification -> com.minook.zeppa.l.a.a:
    java.util.List items -> items
    java.lang.String nextPageToken -> nextPageToken
    java.util.List getItems() -> a
    java.lang.String getNextPageToken() -> b
com.minook.zeppa.zeppanotificationendpoint.model.Key -> com.minook.zeppa.l.a.b:
    java.lang.String appId -> appId
    java.lang.Boolean complete -> complete
    java.lang.Long id -> id
    java.lang.String kind -> kind
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    com.minook.zeppa.zeppanotificationendpoint.model.Key parent -> parent
com.minook.zeppa.zeppanotificationendpoint.model.ZeppaNotification -> com.minook.zeppa.l.a.c:
    java.lang.Long created -> created
    java.lang.Long eventId -> eventId
    java.lang.Long expires -> expires
    java.lang.String extraMessage -> extraMessage
    java.lang.Boolean hasSeen -> hasSeen
    java.lang.Long id -> id
    com.minook.zeppa.zeppanotificationendpoint.model.Key key -> key
    java.lang.Long recipientId -> recipientId
    java.lang.Long senderId -> senderId
    java.lang.String type -> type
    java.lang.Long updated -> updated
    java.lang.Long userId -> userId
    java.lang.Long getCreated() -> a
    java.lang.Long getEventId() -> b
    java.lang.Long getId() -> c
    java.lang.Long getRecipientId() -> d
    java.lang.Long getSenderId() -> e
    java.lang.String getType() -> f
com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint -> com.minook.zeppa.m.a:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> a
    com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint$FetchCurrentZeppaUser fetchCurrentZeppaUser() -> a
    com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint$InsertZeppaUser insertZeppaUser(com.minook.zeppa.zeppauserendpoint.model.ZeppaUser) -> a
    com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint$UpdateZeppaUser updateZeppaUser(com.minook.zeppa.zeppauserendpoint.model.ZeppaUser) -> b
com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint$Builder -> com.minook.zeppa.m.b:
    com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint build() -> a
com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint$FetchCurrentZeppaUser -> com.minook.zeppa.m.c:
    com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint this$0 -> a
com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint$InsertZeppaUser -> com.minook.zeppa.m.d:
    com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint this$0 -> a
com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint$UpdateZeppaUser -> com.minook.zeppa.m.e:
    com.minook.zeppa.zeppauserendpoint.Zeppauserendpoint this$0 -> a
com.minook.zeppa.zeppauserendpoint.ZeppauserendpointRequest -> com.minook.zeppa.m.f:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
com.minook.zeppa.zeppauserendpoint.model.Key -> com.minook.zeppa.m.a.a:
    java.lang.String appId -> appId
    java.lang.Boolean complete -> complete
    java.lang.Long id -> id
    java.lang.String kind -> kind
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    com.minook.zeppa.zeppauserendpoint.model.Key parent -> parent
    java.lang.Long getId() -> a
com.minook.zeppa.zeppauserendpoint.model.ZeppaUser -> com.minook.zeppa.m.a.b:
    java.lang.String authEmail -> authEmail
    java.lang.Long created -> created
    java.lang.String googleProfileId -> googleProfileId
    java.lang.Long id -> id
    com.minook.zeppa.zeppauserendpoint.model.Key key -> key
    java.lang.Long updated -> updated
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUserInfo userInfo -> userInfo
    java.lang.String zeppaCalendarId -> zeppaCalendarId
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUser setGoogleProfileId(java.lang.String) -> a
    com.minook.zeppa.zeppauserendpoint.model.Key getKey() -> a
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUserInfo getUserInfo() -> b
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUser setUserInfo(com.minook.zeppa.zeppauserendpoint.model.ZeppaUserInfo) -> a
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUser setZeppaCalendarId(java.lang.String) -> b
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUser clone() -> c
com.minook.zeppa.zeppauserendpoint.model.ZeppaUserInfo -> com.minook.zeppa.m.a.c:
    java.lang.Long created -> created
    java.lang.String familyName -> familyName
    java.lang.String givenName -> givenName
    java.lang.String googleAccountEmail -> googleAccountEmail
    java.lang.Long id -> id
    java.lang.String imageUrl -> imageUrl
    com.minook.zeppa.zeppauserendpoint.model.Key key -> key
    java.lang.String primaryUnformattedNumber -> primaryUnformattedNumber
    java.lang.Long updated -> updated
    java.lang.String getFamilyName() -> a
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUserInfo setFamilyName(java.lang.String) -> a
    java.lang.String getGivenName() -> b
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUserInfo setGivenName(java.lang.String) -> b
    java.lang.String getGoogleAccountEmail() -> c
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUserInfo setGoogleAccountEmail(java.lang.String) -> c
    java.lang.String getImageUrl() -> d
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUserInfo setImageUrl(java.lang.String) -> d
    java.lang.String getPrimaryUnformattedNumber() -> e
    com.minook.zeppa.zeppauserendpoint.model.ZeppaUserInfo setPrimaryUnformattedNumber(java.lang.String) -> e
com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint -> com.minook.zeppa.n.a:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> a
    com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint$FetchZeppaUserInfoByParentId fetchZeppaUserInfoByParentId(java.lang.Long) -> a
    com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint$GetZeppaUserInfo getZeppaUserInfo(java.lang.Long) -> b
    com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint$ListZeppaUserInfo listZeppaUserInfo() -> a
com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint$Builder -> com.minook.zeppa.n.b:
    com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint build() -> a
com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint$FetchZeppaUserInfoByParentId -> com.minook.zeppa.n.c:
    java.lang.Long requestedParentId -> requestedParentId
    com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint this$0 -> a
com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint$GetZeppaUserInfo -> com.minook.zeppa.n.d:
    java.lang.Long id -> id
    com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint this$0 -> a
com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint$ListZeppaUserInfo -> com.minook.zeppa.n.e:
    java.lang.String cursor -> cursor
    java.lang.String filter -> filter
    java.lang.Integer limit -> limit
    java.lang.String ordering -> ordering
    com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint this$0 -> a
    com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint$ListZeppaUserInfo setCursor(java.lang.String) -> a
    com.minook.zeppa.zeppauserinfoendpoint.Zeppauserinfoendpoint$ListZeppaUserInfo setFilter(java.lang.String) -> b
com.minook.zeppa.zeppauserinfoendpoint.ZeppauserinfoendpointRequest -> com.minook.zeppa.n.f:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
com.minook.zeppa.zeppauserinfoendpoint.model.CollectionResponseZeppaUserInfo -> com.minook.zeppa.n.a.a:
    java.util.List items -> items
    java.lang.String nextPageToken -> nextPageToken
    java.util.List getItems() -> a
com.minook.zeppa.zeppauserinfoendpoint.model.Key -> com.minook.zeppa.n.a.b:
    java.lang.String appId -> appId
    java.lang.Boolean complete -> complete
    java.lang.Long id -> id
    java.lang.String kind -> kind
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    com.minook.zeppa.zeppauserinfoendpoint.model.Key parent -> parent
    java.lang.Long getId() -> a
    com.minook.zeppa.zeppauserinfoendpoint.model.Key getParent() -> b
com.minook.zeppa.zeppauserinfoendpoint.model.ZeppaUserInfo -> com.minook.zeppa.n.a.c:
    java.lang.Long created -> created
    java.lang.String familyName -> familyName
    java.lang.String givenName -> givenName
    java.lang.String googleAccountEmail -> googleAccountEmail
    java.lang.Long id -> id
    java.lang.String imageUrl -> imageUrl
    com.minook.zeppa.zeppauserinfoendpoint.model.Key key -> key
    java.lang.String primaryUnformattedNumber -> primaryUnformattedNumber
    java.lang.Long updated -> updated
    java.lang.String getFamilyName() -> a
    java.lang.String getGivenName() -> b
    java.lang.String getGoogleAccountEmail() -> c
    java.lang.String getImageUrl() -> d
    com.minook.zeppa.zeppauserinfoendpoint.model.Key getKey() -> e
    java.lang.String getPrimaryUnformattedNumber() -> f
com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint -> com.minook.zeppa.o.a:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> a
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$InsertZeppaUserToUserRelationship insertZeppaUserToUserRelationship(com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship) -> a
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$ListZeppaUserToUserRelationship listZeppaUserToUserRelationship() -> a
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$RemoveZeppaUserToUserRelationship removeZeppaUserToUserRelationship(java.lang.Long) -> a
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$UpdateZeppaUserToUserRelationship updateZeppaUserToUserRelationship(com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship) -> b
com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$Builder -> com.minook.zeppa.o.b:
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint build() -> a
com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$InsertZeppaUserToUserRelationship -> com.minook.zeppa.o.c:
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint this$0 -> a
com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$ListZeppaUserToUserRelationship -> com.minook.zeppa.o.d:
    java.lang.String cursor -> cursor
    java.lang.String filter -> filter
    java.lang.Integer limit -> limit
    java.lang.String ordering -> ordering
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint this$0 -> a
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$ListZeppaUserToUserRelationship setCursor(java.lang.String) -> a
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$ListZeppaUserToUserRelationship setFilter(java.lang.String) -> b
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$ListZeppaUserToUserRelationship setLimit(java.lang.Integer) -> a
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$ListZeppaUserToUserRelationship setOrdering(java.lang.String) -> c
com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$RemoveZeppaUserToUserRelationship -> com.minook.zeppa.o.e:
    java.lang.Long id -> id
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint this$0 -> a
com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint$UpdateZeppaUserToUserRelationship -> com.minook.zeppa.o.f:
    com.minook.zeppa.zeppausertouserrelationshipendpoint.Zeppausertouserrelationshipendpoint this$0 -> a
com.minook.zeppa.zeppausertouserrelationshipendpoint.ZeppausertouserrelationshipendpointRequest -> com.minook.zeppa.o.g:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
com.minook.zeppa.zeppausertouserrelationshipendpoint.model.CollectionResponseZeppaUserToUserRelationship -> com.minook.zeppa.o.a.a:
    java.util.List items -> items
    java.lang.String nextPageToken -> nextPageToken
    java.util.List getItems() -> a
    java.lang.String getNextPageToken() -> b
com.minook.zeppa.zeppausertouserrelationshipendpoint.model.Key -> com.minook.zeppa.o.a.b:
    java.lang.String appId -> appId
    java.lang.Boolean complete -> complete
    java.lang.Long id -> id
    java.lang.String kind -> kind
    java.lang.String name -> name
    java.lang.String namespace -> namespace
    com.minook.zeppa.zeppausertouserrelationshipendpoint.model.Key parent -> parent
com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship -> com.minook.zeppa.o.a.c:
    java.lang.Long created -> created
    java.lang.Long creatorId -> creatorId
    java.lang.Long id -> id
    com.minook.zeppa.zeppausertouserrelationshipendpoint.model.Key key -> key
    java.lang.String relationshipType -> relationshipType
    java.lang.Long subjectId -> subjectId
    java.lang.Long updated -> updated
    java.lang.Long getCreatorId() -> a
    com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship setCreatorId(java.lang.Long) -> a
    java.lang.Long getId() -> b
    java.lang.String getRelationshipType() -> c
    com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship setRelationshipType(java.lang.String) -> a
    java.lang.Long getSubjectId() -> d
    com.minook.zeppa.zeppausertouserrelationshipendpoint.model.ZeppaUserToUserRelationship setSubjectId(java.lang.Long) -> b
uk.co.senab.actionbarpulltorefresh.library.EnvironmentDelegate -> uk.co.senab.actionbarpulltorefresh.library.a:
uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer -> uk.co.senab.actionbarpulltorefresh.library.b:
    void onPulled(float) -> a
    void onRefreshStarted() -> a
    void onReleaseToRefresh() -> b
    boolean showHeaderView() -> c
    boolean hideHeaderView() -> d
    void onConfigurationChanged(android.app.Activity,android.content.res.Configuration) -> a
uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher -> uk.co.senab.actionbarpulltorefresh.library.c:
    uk.co.senab.actionbarpulltorefresh.library.EnvironmentDelegate mEnvironmentDelegate -> a
    uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer mHeaderTransformer -> b
    uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener mOnRefreshListener -> c
    android.app.Activity mActivity -> d
    android.view.View mHeaderView -> e
    uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener mHeaderViewListener -> f
    int mTouchSlop -> g
    float mRefreshScrollDistance -> h
    float mInitialMotionY -> i
    float mLastMotionY -> j
    float mPullBeginY -> k
    float mInitialMotionX -> l
    boolean mIsBeingDragged -> m
    boolean mIsRefreshing -> n
    boolean mHandlingTouchEventFromDown -> o
    android.view.View mViewBeingDragged -> p
    java.util.WeakHashMap mRefreshableViews -> q
    boolean mRefreshOnUp -> r
    int mRefreshMinimizeDelay -> s
    boolean mRefreshMinimize -> t
    boolean mIsDestroyed -> u
    int[] mViewLocationResult -> v
    android.graphics.Rect mRect -> w
    android.os.Handler mHandler -> x
    java.lang.Runnable mRefreshMinimizeRunnable -> y
    void clearRefreshableViews() -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    void setRefreshing(boolean) -> a
    boolean isRefreshing() -> b
    void destroy() -> c
    void setHeaderViewListener(uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener) -> a
    android.view.View getHeaderView() -> d
    uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer getHeaderTransformer() -> e
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> a
    boolean isViewBeingDragged(android.view.View,android.view.MotionEvent) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> b
    void resetTouch() -> f
    void onPullStarted(float) -> a
    void onPull(android.view.View,float) -> a
    void onPullEnded() -> g
    void showHeaderView() -> h
    void hideHeaderView() -> i
    boolean checkScrollForRefresh(android.view.View) -> a
    void setRefreshingInt(android.view.View,boolean,boolean) -> a
    boolean canRefresh(boolean) -> b
    float getScrollNeededForRefresh(android.view.View) -> b
    void reset(boolean) -> c
    void startRefresh(android.view.View,boolean) -> a
    boolean isDestroyed() -> j
    void removeHeaderViewFromActivity(android.view.View,android.app.Activity) -> a
uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout -> uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout:
    uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher mPullToRefreshAttacher -> a
    void setRefreshing(boolean) -> setRefreshing
    void setHeaderViewListener(uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener) -> setHeaderViewListener
    android.view.View getHeaderView() -> getHeaderView
    uk.co.senab.actionbarpulltorefresh.library.HeaderTransformer getHeaderTransformer() -> getHeaderTransformer
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    android.widget.FrameLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setPullToRefreshAttacher(uk.co.senab.actionbarpulltorefresh.library.PullToRefreshAttacher) -> setPullToRefreshAttacher
    void ensureAttacher() -> a
uk.co.senab.actionbarpulltorefresh.library.PullToRefreshLayout$LayoutParams -> uk.co.senab.actionbarpulltorefresh.library.d:
    java.lang.String mViewDelegateClassName -> a
uk.co.senab.actionbarpulltorefresh.library.R -> uk.co.senab.actionbarpulltorefresh.library.e:
uk.co.senab.actionbarpulltorefresh.library.R$color -> uk.co.senab.actionbarpulltorefresh.library.f:
    int default_progress_bar_color -> default_progress_bar_color
uk.co.senab.actionbarpulltorefresh.library.R$styleable -> uk.co.senab.actionbarpulltorefresh.library.g:
    int[] PullToRefreshHeader -> PullToRefreshHeader
    int PullToRefreshHeader_ptrHeaderBackground -> PullToRefreshHeader_ptrHeaderBackground
    int PullToRefreshHeader_ptrHeaderHeight -> PullToRefreshHeader_ptrHeaderHeight
    int PullToRefreshHeader_ptrHeaderTitleTextAppearance -> PullToRefreshHeader_ptrHeaderTitleTextAppearance
    int PullToRefreshHeader_ptrProgressBarColor -> PullToRefreshHeader_ptrProgressBarColor
    int PullToRefreshHeader_ptrProgressBarCornerRadius -> PullToRefreshHeader_ptrProgressBarCornerRadius
    int PullToRefreshHeader_ptrProgressBarHeight -> PullToRefreshHeader_ptrProgressBarHeight
    int PullToRefreshHeader_ptrProgressBarStyle -> PullToRefreshHeader_ptrProgressBarStyle
    int PullToRefreshHeader_ptrPullText -> PullToRefreshHeader_ptrPullText
    int PullToRefreshHeader_ptrRefreshingText -> PullToRefreshHeader_ptrRefreshingText
    int PullToRefreshHeader_ptrReleaseText -> PullToRefreshHeader_ptrReleaseText
    int[] PullToRefreshView -> PullToRefreshView
    int PullToRefreshView_ptrViewDelegateClass -> PullToRefreshView_ptrViewDelegateClass
uk.co.senab.actionbarpulltorefresh.library.listeners.HeaderViewListener -> uk.co.senab.actionbarpulltorefresh.library.a.a:
    void onStateChanged(android.view.View,int) -> a
uk.co.senab.actionbarpulltorefresh.library.listeners.OnRefreshListener -> uk.co.senab.actionbarpulltorefresh.library.a.b:
    void onRefreshStarted(android.view.View) -> a
uk.co.senab.actionbarpulltorefresh.library.sdk.Compat -> uk.co.senab.actionbarpulltorefresh.library.b.a:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
uk.co.senab.actionbarpulltorefresh.library.sdk.CompatBase -> uk.co.senab.actionbarpulltorefresh.library.b.b:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
uk.co.senab.actionbarpulltorefresh.library.sdk.CompatV11 -> uk.co.senab.actionbarpulltorefresh.library.b.c:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
uk.co.senab.actionbarpulltorefresh.library.sdk.CompatV16 -> uk.co.senab.actionbarpulltorefresh.library.b.d:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
uk.co.senab.actionbarpulltorefresh.library.viewdelegates.ViewDelegate -> uk.co.senab.actionbarpulltorefresh.library.c.a:
    boolean isReadyForPull(android.view.View,float,float) -> a
uk.co.senab.actionbarpulltorefresh.library.widget.AnimationRunnable -> uk.co.senab.actionbarpulltorefresh.library.widget.a:
    android.view.View mView -> a
    boolean mStarted -> b
    int mDuration -> c
    long mStartTime -> d
    android.view.animation.Interpolator mInterpolator -> e
    int mRunCount -> f
    int mRepeatCount -> g
    float mAnimationValue -> h
    uk.co.senab.actionbarpulltorefresh.library.widget.AnimationRunnable$AnimatorUpdateListener mUpdateListener -> i
    void setDuration(int) -> a
    void setRepeatCount(int) -> b
    void setUpdateListener(uk.co.senab.actionbarpulltorefresh.library.widget.AnimationRunnable$AnimatorUpdateListener) -> a
    void start() -> a
    void restart() -> e
    void cancel() -> b
    boolean isStarted() -> c
    float getAnimatedValue() -> d
    void run() -> run
    void checkState() -> f
uk.co.senab.actionbarpulltorefresh.library.widget.AnimationRunnable$AnimatorUpdateListener -> uk.co.senab.actionbarpulltorefresh.library.widget.b:
    void onAnimationUpdate(uk.co.senab.actionbarpulltorefresh.library.widget.AnimationRunnable) -> a
uk.co.senab.actionbarpulltorefresh.library.widget.PullToRefreshProgressBar -> uk.co.senab.actionbarpulltorefresh.library.widget.PullToRefreshProgressBar:
    uk.co.senab.actionbarpulltorefresh.library.widget.AnimationRunnable mIndeterminateAnimator -> a
    android.graphics.Paint mPaint -> b
    int mIndeterminateBarSpacing -> c
    float mDensity -> d
    int mSegmentCount -> e
    boolean mIndeterminate -> f
    int mProgress -> g
    int mProgressMax -> h
    int mProgressBarColor -> i
    float mProgressBarRadiusPx -> j
    android.graphics.RectF mDrawRect -> k
    void setIndeterminate(boolean) -> setIndeterminate
    void setProgress(int) -> setProgress
    void setProgressBarColor(int) -> setProgressBarColor
    void setProgressBarCornerRadius(float) -> setProgressBarCornerRadius
    void setMax(int) -> setMax
    int getMax() -> getMax
    void drawProgress(android.graphics.Canvas) -> a
    void drawIndeterminate(android.graphics.Canvas) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void setProgressState(int,int,boolean) -> a
    void onAnimationUpdate(uk.co.senab.actionbarpulltorefresh.library.widget.AnimationRunnable) -> a
